import React, { useState } from 'react';
import { 
    createUserWithEmailAndPassword, 
    signInWithEmailAndPassword, 
    signOut 
} from "firebase/auth";

// --- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Auth ---
export const Auth = ({ user, auth }) => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [isLoginView, setIsLoginView] = useState(true); // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É –≤—Ö–æ–¥–æ–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
    const [error, setError] = useState('');

    const handleAuthAction = async () => {
        setError('');
        if (!email || !password) {
            setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.');
            return;
        }

        try {
            if (isLoginView) {
                // –í—Ö–æ–¥ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await signInWithEmailAndPassword(auth, email, password);
            } else {
                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await createUserWithEmailAndPassword(auth, email, password);
            }
        } catch (err) {
            console.error("–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:", err.code);
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–¥—ã –æ—à–∏–±–æ–∫ Firebase –≤ –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            switch (err.code) {
                case 'auth/invalid-email':
                    setError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email.');
                    break;
                case 'auth/user-not-found':
                case 'auth/wrong-password':
                case 'auth/invalid-credential':
                    setError('–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å.');
                    break;
                case 'auth/email-already-in-use':
                    setError('–≠—Ç–æ—Ç email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.');
                    break;
                case 'auth/weak-password':
                    setError('–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º —Å–ª–∞–±—ã–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤).');
                    break;
                case 'auth/too-many-requests':
                    setError('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                    break;
                default:
                    setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            }
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞
    const handleSignOut = () => {
        signOut(auth).catch(error => console.error("–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:", error));
    };
    
    return (
        <div className="p-4 space-y-4">
            {user && !user.isAnonymous ? (
                // --- –ò–ù–¢–ï–†–§–ï–ô–° –î–õ–Ø –ó–ê–õ–û–ì–ò–ù–ï–ù–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ---
                <div className="p-4 rounded-lg bg-component-bg border border-border-color">
                    <div className="flex items-center space-x-4 mb-4">
                         <img src={user.photoURL || 'https://placehold.co/64x64/F5F1ED/2C3A47?text=üë§'} alt="Avatar" className="w-16 h-16 rounded-full" />
                        <div>
                            <h3 className="font-bold">{user.email}</h3>
                        </div>
                    </div>
                    <button onClick={handleSignOut} className="w-full py-2 rounded-lg bg-gray-200 text-gray-800 font-bold">–í—ã–π—Ç–∏</button>
                </div>
            ) : (
                // --- –ò–ù–¢–ï–†–§–ï–ô–° –î–õ–Ø –í–•–û–î–ê/–†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ---
                <div className="p-4 rounded-lg bg-component-bg border border-border-color">
                    <h3 className="font-bold mb-2">{isLoginView ? '–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç' : '–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç'}</h3>
                    <p className="text-sm opacity-70 mb-3">
                        –ß—Ç–æ–±—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –∑–∞–∫–ª–∞–¥–∫–∏, –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å —á—Ç–µ–Ω–∏—è.
                    </p>
                    
                    <div className="space-y-3">
                        <input
                            type="email"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                            placeholder="Email"
                            className="w-full bg-background border border-border-color rounded-lg py-2 px-4 text-text-main placeholder-text-main/50 focus:outline-none focus:ring-2 focus:ring-accent"
                        />
                         <input
                            type="password"
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                            placeholder="–ü–∞—Ä–æ–ª—å"
                            className="w-full bg-background border border-border-color rounded-lg py-2 px-4 text-text-main placeholder-text-main/50 focus:outline-none focus:ring-2 focus:ring-accent"
                        />
                        <button onClick={handleAuthAction} className="w-full py-2 rounded-lg bg-accent text-white font-bold">
                            {isLoginView ? '–í–æ–π—Ç–∏' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
                        </button>
                    </div>
                     <button onClick={() => setIsLoginView(!isLoginView)} className="w-full text-center text-xs mt-4 text-accent hover:underline">
                        {isLoginView ? '–£ –º–µ–Ω—è –µ—â–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞' : '–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
                    </button>
                    {error && <p className="text-red-500 text-xs mt-2 text-center">{error}</p>}
                </div>
            )}
        </div>
    );
};